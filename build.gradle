plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.5'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.ajoufinder'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.session:spring-session-core'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.4'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
}

def generatedMain = 'src/main/generated'
def generatedTest = 'src/test/generated'

tasks.named('compileJava') {
    options.generatedSourceOutputDirectory = file(generatedMain)
}

tasks.named('compileTestJava') {
    options.generatedSourceOutputDirectory = file(generatedTest)
}

sourceSets {
    main {
        java {
            srcDirs += generatedMain
        }
    }
    test {
        java {
            srcDirs += generatedTest
        }
    }
}
